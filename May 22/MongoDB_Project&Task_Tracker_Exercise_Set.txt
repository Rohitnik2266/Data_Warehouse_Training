MongoDB Exercise Set #2: Project & Task Tracker

Database: taskmanager, Collections: projects , tasks , users

Section 1: Basic Document Modeling & Insertion

1.Create a database called taskmanager
test> use taskmanager
switched to db taskmanager
taskmanager>

2.Insert 3 users into a users collection. Each should have:
name (string)
email (string)
role (either "admin" , "manager" , or "developer" )
active (boolean)
taskmanager> db.users.insertMany([
...   { name: "Alice", email: "alice@example.com", role: "admin", active: true },
...   { name: "Bob", email: "bob@example.com", role: "developer", active: true },
...   { name: "Carol", email: "carol@example.com", role: "manager", active: false }
... ])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('683345d932f6c18adecc8988'),
    '1': ObjectId('683345d932f6c18adecc8989'),
    '2': ObjectId('683345d932f6c18adecc898a')
  }
}
	
3.Insert 2 projects into a projects collection:
title , description , startDate , status (e.g. "active" , "completed" )
Embed a createdBy sub-document containing the user’s _id , name
taskmanager> const userAlice = db.users.findOne({ name: "Alice" });

taskmanager> db.projects.insertMany([
...   {
...     title: "Website Redesign",
...     description: "Revamp the corporate website",
...     startDate: new Date("2024-05-01"),
...     status: "active",
...     createdBy: {
...       _id: userAlice._id,
...       name: userAlice.name
...     },
...     progress: 40
...   },
...   {
...     title: "Mobile App",
...     description: "Build the company mobile app",
...     startDate: new Date("2024-03-20"),
...     status: "completed",
...     createdBy: {
...       _id: userAlice._id,
...       name: userAlice.name
...     },
...     progress: 100
...   }
... ])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6833460932f6c18adecc898b'),
    '1': ObjectId('6833460932f6c18adecc898c')
  }
}

4.Insert 5 tasks into a tasks collection:
Fields: title , assignedTo (user _id ), projectId , priority , dueDate , status
taskmanager> const userBob = db.users.findOne({ name: "Bob" });

taskmanager> const project1 = db.projects.findOne({ title: "Website Redesign" });

taskmanager> db.tasks.insertMany([
...   {
...     title: "Setup repo",
...     assignedTo: userBob._id,
...     projectId: project1._id,
...     priority: "high",
...     dueDate: new Date("2024-06-01"),
...     status: "pending"
...   },
...   {
...     title: "Design UI mockups",
...     assignedTo: userBob._id,
...     projectId: project1._id,
...     priority: "medium",
...     dueDate: new Date("2024-06-10"),
...     status: "in progress"
...   },
...   {
...     title: "Create database schema",
...     assignedTo: userBob._id,
...     projectId: project1._id,
...     priority: "high",
...     dueDate: new Date("2024-06-05"),
...     status: "pending"
...   },
...   {
...     title: "Integrate API",
...     assignedTo: userBob._id,
...     projectId: project1._id,
...     priority: "low",
...     dueDate: new Date("2024-06-15"),
...     status: "pending"
...   },
...   {
...     title: "Testing",
...     assignedTo: userBob._id,
...     projectId: project1._id,
...     priority: "medium",
...     dueDate: new Date("2024-06-20"),
...     status: "pending"
...   }
... ])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6833463432f6c18adecc898d'),
    '1': ObjectId('6833463432f6c18adecc898e'),
    '2': ObjectId('6833463432f6c18adecc898f'),
    '3': ObjectId('6833463432f6c18adecc8990'),
    '4': ObjectId('6833463432f6c18adecc8991')
  }
}

-----------------------------------------------------------------------------------------------------------

Section 2: Filtering & Querying

5.Find all tasks with priority "high" that are not completed
taskmanager> db.tasks.find({
...   priority: "high",
...   status: { $ne: "completed" }
... })
[
  {
    _id: ObjectId('6833463432f6c18adecc898d'),
    title: 'Setup repo',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'high',
    dueDate: ISODate('2024-06-01T00:00:00.000Z'),
    status: 'pending'
  },
  {
    _id: ObjectId('6833463432f6c18adecc898f'),
    title: 'Create database schema',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'high',
    dueDate: ISODate('2024-06-05T00:00:00.000Z'),
    status: 'pending'
  }
]

6.Query all active users with role "developer"
taskmanager> db.users.find({
...   role: "developer",
...   active: true
... })
[
  {
    _id: ObjectId('683345d932f6c18adecc8989'),
    name: 'Bob',
    email: 'bob@example.com',
    role: 'developer',
    active: true
  }
]
7.Find all tasks assigned to a specific user (by ObjectId )
taskmanager> db.tasks.find({
...   assignedTo: userBob._id
... })
[
  {
    _id: ObjectId('6833463432f6c18adecc898d'),
    title: 'Setup repo',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'high',
    dueDate: ISODate('2024-06-01T00:00:00.000Z'),
    status: 'pending'
  },
  {
    _id: ObjectId('6833463432f6c18adecc898e'),
    title: 'Design UI mockups',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'medium',
    dueDate: ISODate('2024-06-10T00:00:00.000Z'),
    status: 'in progress'
  },
  {
    _id: ObjectId('6833463432f6c18adecc898f'),
    title: 'Create database schema',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'high',
    dueDate: ISODate('2024-06-05T00:00:00.000Z'),
    status: 'pending'
  },
  {
    _id: ObjectId('6833463432f6c18adecc8990'),
    title: 'Integrate API',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'low',
    dueDate: ISODate('2024-06-15T00:00:00.000Z'),
    status: 'pending'
  },
  {
    _id: ObjectId('6833463432f6c18adecc8991'),
    title: 'Testing',
    assignedTo: ObjectId('683345d932f6c18adecc8989'),
    projectId: ObjectId('6833460932f6c18adecc898b'),
    priority: 'medium',
    dueDate: ISODate('2024-06-20T00:00:00.000Z'),
    status: 'pending'
  }
]

8.Find all projects started in the last 30 days
taskmanager> db.projects.find({
...   startDate: { $gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) }
... })
------------------------------------------------------------------------------------------------------------

Section 3: Update Operations

9.Change the status of one task to "completed"
taskmanager> db.tasks.updateOne(
...   { title: "Setup repo" },
...   { $set: { status: "completed" } }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

1)Add a new role field called "teamLead" to one of the users
taskmanager> db.users.updateOne(
...   { name: "Bob" },
...   { $set: { role: "teamLead" } }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

1.1)Add a new tag array to a task: ["urgent", "frontend"]
taskmanager> db.tasks.updateOne(
...   { title: "Design UI mockups" },
...   { $set: { tags: ["urgent", "frontend"] } }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

--------------------------------------------------------------------------------------------------------------

Section 4: Array and Subdocument Operations

1.2)Add a new tag "UI" to the task’s tags array using $addToSet
taskmanager> db.tasks.updateOne(
...   { title: "Design UI mockups" },
...   { $addToSet: { tags: "UI" } }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

1.3)Remove "frontend" from a task’s tag list
taskmanager> db.tasks.updateOne( { title: "Design UI mockups" }, { $pull: { tags: "frontend" } } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

1.4)Use $inc to increment a project ’s progress field by 10
taskmanager> db.projects.updateOne(
...   { title: "Website Redesign" },
...   { $inc: { progress: 10 } }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

--------------------------------------------------------------------------------------------------------------

Section 5: Aggregation & Lookup

1.5)Use $lookup to join tasks with users and show task title + assignee name
taskmanager> db.tasks.aggregate([
...   {
...     $lookup: {
...       from: "users",
...       localField: "assignedTo",
...       foreignField: "_id",
...       as: "assignee"
...     }
...   },
...   {
...     $unwind: "$assignee"
...   },
...   {
...     $project: {
...       _id: 0,
...       title: 1,
...       assigneeName: "$assignee.name"
...     }
...   }
... ])
[
  { title: 'Setup repo', assigneeName: 'Bob' },
  { title: 'Design UI mockups', assigneeName: 'Bob' },
  { title: 'Create database schema', assigneeName: 'Bob' },
  { title: 'Integrate API', assigneeName: 'Bob' },
  { title: 'Testing', assigneeName: 'Bob' }
]

1.6)Use $lookup to join tasks with projects , and filter tasks where project status = active
taskmanager> db.tasks.aggregate([ { $lookup: { from: "projects", localField: "projectId", foreignField: "_id", as: "project" } }, { $unwind: "$project" }, { $match: { "project.status": "active" } }, { $project: { title: 1, projectTitle: "$project.title" } }] )
[
  {
    _id: ObjectId('6833463432f6c18adecc898d'),
    title: 'Setup repo',
    projectTitle: 'Website Redesign'
  },
  {
    _id: ObjectId('6833463432f6c18adecc898e'),
    title: 'Design UI mockups',
    projectTitle: 'Website Redesign'
  },
  {
    _id: ObjectId('6833463432f6c18adecc898f'),
    title: 'Create database schema',
    projectTitle: 'Website Redesign'
  },
  {
    _id: ObjectId('6833463432f6c18adecc8990'),
    title: 'Integrate API',
    projectTitle: 'Website Redesign'
  },
  {
    _id: ObjectId('6833463432f6c18adecc8991'),
    title: 'Testing',
    projectTitle: 'Website Redesign'
  }
]

1.7)Use $group to get count of tasks per status
taskmanager> db.tasks.aggregate([
...   {
...     $group: {
...       _id: "$status",
...       count: { $sum: 1 }
...     }
...   }
... ])
[
  { _id: 'pending', count: 3 },
  { _id: 'completed', count: 1 },
  { _id: 'in progress', count: 1 }
]

1.8)Use $match , $sort , and $limit to get top 3 soonest due tasks
taskmanager> db.tasks.aggregate([
...   { $match: { status: { $ne: "completed" } } },
...   { $sort: { dueDate: 1 } },
...   { $limit: 3 },
...   { $project: { title: 1, dueDate: 1 } }
... ])
[
  {
    _id: ObjectId('6833463432f6c18adecc898f'),
    title: 'Create database schema',
    dueDate: ISODate('2024-06-05T00:00:00.000Z')
  },
  {
    _id: ObjectId('6833463432f6c18adecc898e'),
    title: 'Design UI mockups',
    dueDate: ISODate('2024-06-10T00:00:00.000Z')
  },
  {
    _id: ObjectId('6833463432f6c18adecc8990'),
    title: 'Integrate API',
    dueDate: ISODate('2024-06-15T00:00:00.000Z')
  }
]

